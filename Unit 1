埋下一个伏笔：正则序也可以成为非常有用的工具，我们将在第3章和第4章研究它的某些内在性质(P11,关于正则序的叙述)
前两章的所有过程应用，都是应用序，
#lang racket
(define (square x)(* x x))

(define (sum-of-squares x y)
  (+ (square x)(square y)))

(define (f a)
  (sum-of-squares(+ a 1)(* a 2)))


2，绝对值
a,
(define (abs x)
  (cond ((> x 0) x)
        ((= x 0) 0)
        ((< x 0) (- x))))

b,
(define (abs x)
  (cond ((< x 0)(- x))
        (else x)))

3，逻辑符合运算符
(define x 8)
(and (> x 5) (< x 10))

out:
#t

(define x 10)
(and (> x 5) (< x 10))

out:
#f

b,定义逻辑复合运算符
(define (>= x y)
  (or (> x y) (= x y)))
(define x 10)
(define y 8)
(>= x y)

(define (>= x y)
  (or (> x y) (= x y)))
  
(define (>= x y)
  (not (< x y)))

out:
#t

注意：如何调用:(>= x y)
